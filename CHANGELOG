
v0.67.6
-------

Dependencies


v0.67.5
-------

Dependency upgraded


v0.67.4
-------

LXON parser upgraded: unquoted keys now support '@' and '-' and there is no more extra limitation for the first character of a key


v0.67.3
-------

Upgraded to glob v10


v0.67.2
-------

Important bugfix: fix constant detection error when the value is a method name of the Object's prototype


v0.65.0
-------

BREAKING: Upgrading stats-modifiers 


v0.64.0
-------

MAYBE BREAKING: empty files and files with only comments are now considered as empty objects instead of undefined (prevent trouble when we are commenting out the last key-value pair of a file)


v0.63.1
-------

Fix KFG section bug, when there is no spaces between the section mark and the section name (which should be supported)


v0.63.0
-------

MAYBE BREAKING: support for inline LXON (LaX jsON) to allow more compact data, disambigation with tags vs arrays are done
by forcing a space after the '[' bracket (or the '{' brace) for LXON (it acts as a regular introducer) where tags require
a tag name starting IMMEDIATELY after the '[' bracket.

Support for builtin type <LXON> (passing a string, like for JSON).


v0.62.1
-------

Stringify: fix function behavior


v0.62.0
-------

BREAKING: kungFig.builtin refactored (but it wasn't really API)
Centralize builtin Classes management (stringify() doesn't have its own stuff, it's now shared within builtin.js)
Fix a stringify bug when using 'noCircularPatch' option and Date instances


v0.61.1
-------

Dependencies


v0.61.0
-------

KFG stringifier now allows antislashes in implicit string


v0.60.3
-------

New .stringify() options for boolean: preferYesNo and preferOnOff


v0.60.2
-------

Add .saveJsonAsync() and .saveKfgAsync()


v0.60.1
-------

Dependencies


v0.60.0
-------

Breaking: stats-modifiers operator priority changed


v0.59.12
--------

Dependencies


v0.59.11
--------

Fix a stats-modifiers issue


v0.59.10
--------

Support for important operator (comes last, less priority)


v0.59.9
-------

StatsModifiers upgraded/fixed


v0.59.8
-------

StatsModifiers upgraded


v0.59.7
-------

Fix more userland operators error (cloning)


v0.59.6
-------

Fix Expression#compile() when there is userland operators


v0.59.5
-------

StatsModifiers -- Modifiers now support the nested syntax


v0.59.4
-------

New Expression operator: is-one-of


v0.59.3
-------

Fix a bug in stats-modifiers


v0.59.2
-------

Expression dependency


v0.59.1
-------

Dependencies upgraded, Expression now supports ternary expression as switch-case-like, Expression supports semi-colons as optional argument separators


v0.59.0
-------

BREAKING dependencies, requiring Node v14.15


v0.58.0
-------

Breaking: upgrading to latest babel-tower/kung-fig-template which have a (minor) breaking change


v0.57.2
-------

Dependency


v0.57.1
-------

(fix previous commit) BREAKING Dynamic and Tag API change
Dynamic#getRecursiveFinalValue() --> Dynamic#getDeepFinalValue() or Dynamic#extractFromStatic()
Tag#getRecursiveFinalValue() --> Tag#extractContent()
cloning rules changed for both extract* API, no cloning for .getDeepFinalValue() except if there is a dynamic object forcing it


v0.57.0
-------

BREAKING Dynamic and Tag API change
Dynamic#getRecursiveFinalValue() --> Dynamic#getDeepFinalValue() or Dynamic#extractFromStatic()
Tag#getRecursiveFinalValue() --> Tag#extractContent()
cloning rules changed for both extract* API, no cloning for .getDeepFinalValue() except if there is a dynamic object forcing it


v0.56.16
--------

stats-modifiers' spellcast interoperability


v0.56.15
--------

StatsModifiers fixes


v0.56.14
--------

stats-modifiers' spellcast fix


v0.56.13
--------

stats-modifiers bugfixed


v0.56.12
--------

Add Gauge and Alignometer to builtin


v0.56.11
--------

stats-modifiers improved


v0.56.10
--------

Stats-modifiers upgraded


v0.56.9
-------

stats-modifiers upgraded: compound stats now have a meaningful base value


v0.56.8
-------

stats-modifiers upgraded


v0.56.7
-------

stats-modifiers upgraded


v0.56.6
-------

stats-modifiers upgraded


v0.56.5
-------

stats-modifiers upgraded


v0.56.4
-------

Dependencies


v0.56.3
-------

Dependencies


v0.56.2
-------

Support for percent number


v0.56.1
-------

Stats-modifiers improved


v0.56.0
-------

New: now KFG supports stats-modifiers


v0.55.0
-------

MAYBE BREAKING: instances and arrays' element repetition refacto.
Element repetition clones non-opaque mutable objects.
Instances now supports includes because they are instanciated AFTER including (before this version, it was done at parser time).


v0.54.6
-------

Dependencies


v0.54.5
-------

Dependencies


v0.54.4
-------

Dependencies


v0.54.3
-------

New operator: fourier


v0.54.2
-------

Kung-fig-expression fix: stop extending native method (minor bug since kung-fig-expression v0.45.0)


v0.54.1
-------

kung-fig-expression


v0.54.0
-------

Maybe breaking -- Expression -- better handling of native JS method and static: .toJs() produces vanilla JS without the operator call overhead


v0.53.3
-------

Dependencies


v0.53.2
-------

New itrim string operators, fix a parser bug (Expression with Ref and no space to parens)


v0.53.1
-------

More string operators


v0.53.0
-------

Maybe breaking: new [[locale]] builtin meta-tag, all template strings in a file now have a locale from its [[locale]] meta tag


v0.52.15
--------

Dependencies


v0.52.14
--------

Dependencies


v0.52.13
--------

Dependencies


v0.52.12
--------

Dependencies


v0.52.11
--------

Dependencies


v0.52.10
--------

Dependencies


v0.52.9
-------

Dependencies


v0.52.8
-------

New: Tag#findAncestorKV()


v0.52.7
-------

Expression dependency


v0.52.6
-------

Dependencies upgraded


v0.52.5
-------

array element repetition and includeRef bug fixed


v0.52.4
-------

Fixing optional dependencies + merge combo


v0.52.3
-------

Critical dependency upgraded: kung-fig-expression


v0.52.2
-------

Fix include-ref inside tags (fix async part)


v0.52.1
-------

Fix include-ref inside tags


v0.52.0
-------

BREAKING CHANGE: heavy internal refacto
syntax: merging dependencies does not need a tree-operator anymore
all include-ref code have been refactored, more clean and easier to maintain
no more KFG cache (it had bugs anyway), caching should be done by userland code
Meta refacto, will be home to many non-data things, both for userland and internal usage (ATM: meta-tags, include-refs, in the future: source code comments)
no more autoReducing by default


v0.51.0
-------

New syntax: Array element repetition


v0.50.2
-------

Fix big bug with falsy values in expression


v0.50.1
-------

New: Expression and Ref now support JS compilation


v0.50.0
-------

BREAKING: Expression strcat operator is now .. (double-dot) instead of . (single-dot), the single-dot is now used for the object navigation operator


v0.49.2
-------

Kung-fig expression: support for spread operator


v0.49.1
-------

Kung-fig expression dependency


v0.49.0
-------

BREAKING: custom operator function signature changed for Expression
support for named parameters


v0.48.0
-------

BREAKING CHANGE: Expression syntax CHANGED -- now the parens meaning cannot be used for array/object creation, parens create a 'stack', array and object are created using either the operator or the dedicated [] and {} syntax... Much cleaner syntax


v0.47.6
-------

Now .load() and .loadAsync() throw when the path is falsy or not a string


v0.47.5
-------

upgrade


v0.47.4
-------

Dependencies


v0.47.3
-------

Fixed unit test for Node.js 10
Now stringify() has the option 'hasOperators'


v0.47.2
-------

Updated README.md


v0.47.1
-------

Documentation updated with the latest features: map, dictionnaries and sections
Compact-list fixed for Map ; Added missing Map constructor


v0.47.0
-------

Big KFG parser refacto.
Support for Map, dictionnary/translation table and section added


v0.46.3
-------

Dictionnary/translation map syntax


v0.46.2
-------

Support for Map with the <: and :> syntax


v0.46.1
-------

Async loading fixed


v0.46.0
-------

Move tree-ops in its own module: kung-fig-tree-ops ; dependencies upgraded ; all kung-fig-* unit tests now use Tea-time's expect


v0.45.3
-------

Dynamic instance


v0.45.2
-------

Dynamic instances support (beta)


v0.45.1
-------

More Tag and TagContainer methods


v0.45.0
-------

Using unified common parsers/stringifiers, dependencies


v0.44.5
-------

.stringify() now supports expressions


v0.44.4
-------

Stringifier of expression and ref bugfixed ; more expression operators and constant ; better expression operator documentation


v0.44.3
-------

.saveKfg(): non-plain object bug fixed when patching circular references


v0.44.2
-------

Documentation fixed


v0.44.1
-------

updated the doc


v0.44.0
-------

Breaking change: all TemplateElement syntaxes have been removed, since there is no real use-cases, instead,
the new <Atom> built-in class (which is not a Dynamic) should be used.


v0.43.13
--------

Dependencies, TemplateElement KFG class


v0.43.12
--------

Dependencies


v0.43.11
--------

revert bad 0.43.10


v0.43.10
--------

more extendable


v0.43.9
-------

Better serializer


v0.43.8
-------

Upgraded all dynamic types


v0.43.7
-------

Yet another Babel Tower upgrade


v0.43.6
-------

Dependencies


v0.43.5
-------

Dependencies


v0.43.4
-------

dynamic fixed


v0.43.3
-------

Working on Spellcast issues with latest kung-fig


v0.43.1
-------

Working on Spellcast issues with latest kung-fig


v0.43.0
-------

Big upgrade: Babel-tower, kung-fig-template, etc


v0.42.0
-------

Package refacto: splitted in many packages


v0.41.6
-------

Fixed the extra spaces parser crash in expression


v0.41.5
-------

Ternary mode for all operators ending with a '?'


v0.41.4
-------

Behavior fixed for '%='


v0.41.3
-------

New operator '%=' (around operator)


v0.41.2
-------

Babel-tower dependency


v0.41.1
-------

return of the strict mode -- after a bug in the eslint config


v0.41.0
-------

ESLint refacto


v0.40.1
-------

Expression: object syntax now supports direct expression in properties


v0.40.0
-------

New: Expression now supports the object syntax!


v0.39.1
-------

Removed deprecated methods and unused dependencies


v0.39.0
-------

New: async file loading!


v0.38.8
-------

New built-in: ordered object


v0.38.7
-------

New operators: . (dot): concat strings, join: array.join


v0.38.6
-------

Important Babel-tower upgrade, allowing more characters as string template variable paths


v0.38.5
-------

New: Tag#findAncestor()


v0.38.3 - v0.38.4
-----------------

Fixed the doc


v0.38.2
-------

Documentation on missing operators


v0.38.1
-------

New operator: is-not-empty?


v0.38.0
-------

Breaking change: modulePath options from v0.37 was conflicting with glob pattern, switch the syntax from bracket to brace


v0.37.0
-------

Breaking changes: node >= 6 ; new options for .load(): modulePath (create symboles) and baseDir (for security)


v0.36.4
-------

Forward some errors


v0.36.3
-------

Fixing .saveKFG() and meta


v0.36.2
-------

Tag#relPath fixed


v0.36.1
-------

Tag#masterFile fixed


v0.36.0
-------

New: Tag#masterFile, Tag#relPath -- Breaking: Tag#uid changed


v0.35.5
-------

Documentation improvements


v0.35.4
-------

Bugfixes: applicable template element, multiline template element


v0.35.3
-------

Dependencies


v0.35.2
-------

Expression: round, floor, ceil, trunc epsilon rounding error fixed


v0.35.1
-------

Dependencies


v0.35.0
-------

Breaking changes: folded multi-line, Expression and TemplateElement can be multi-line too


v0.34.16
--------

New: Tag#uid


v0.34.15
--------

Ref#unset(), unit tests


v0.34.14
--------

Ref#define(), unit tests


v0.34.13
--------

Ref#set() now has the 'defineOnly' option


v0.34.12
--------

Documentation


v0.34.11
--------

Cloning/non-cloning behavior for nested objects/arrays (again)


v0.34.10
--------

Cloning/non-cloning behavior for nested objects/arrays


v0.34.9
-------

Cloning/non-cloning behavior


v0.34.8
-------

Dynamic: cloning bug fixed


v0.34.7
-------

Tag#locationStr() dropped in favor of the Tag#location getter


v0.34.6
-------

New method: Tag#locationStr()


v0.34.5
-------

Better line and file reporting for tags


v0.34.4
-------

Documentation updated


v0.34.3
-------

Expression - new operator: floored integer division and positive modulo


v0.34.2
-------

Expression - new operator: integer division


v0.34.1
-------

Expression: is-empty? operator


v0.34.0
-------

Breaking changes: engine node >= 4.5, because of node v6 'new Buffer' deprecation migration


v0.33.17
--------

Making treeOps browser compliant


v0.33.16
--------

Documentation improvements


v0.33.15
--------

Documentation improvements


v0.33.14
--------

Documentation improvements


v0.33.13
--------

Documentation fixed


v0.33.12
--------

Documentation improvements


v0.33.11
--------

Documentation improvements


v0.33.10
--------

Documentation improvements


v0.33.9
-------

Documentation improvements


v0.33.8
-------

Documentation improvements


v0.33.7
-------

Added the missing template element quoted syntax: $%""


v0.33.6
-------

Documentation, Babel Tower dependency


v0.33.5
-------

Dynamic and Ref documentation


v0.33.4
-------

Documentation links refacto


v0.33.3
-------

Documentation


v0.33.2
-------

Documentation improvements


v0.33.1
-------

The 5th argument of ClassicTag is now bugfixed.


v0.33.0
-------

kungFig.load() and kungFig.parse() now support the 'metaTags' options to customize meta-tags, it works just like the 'tags'
options.


v0.32.2 - v0.32.4
-----------------

Documentation improvements.

